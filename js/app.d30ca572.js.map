{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ui/router/types.ts","webpack:///./src/ui/components/Box.ts","webpack:///./src/ui/components/Table.ts","webpack:///./src/ui/folds/option.ts","webpack:///./src/ui/components/BreweryTable.ts","webpack:///./src/ui/components/Button.ts","webpack:///./src/ui/components/Container.ts","webpack:///./src/services/breweryDB/error.ts","webpack:///./src/ui/dictionaries/lookup.ts","webpack:///./src/ui/dictionaries/apiError.ts","webpack:///./src/ui/components/ErrorMessage.ts","webpack:///./src/ui/components/Subtitle.ts","webpack:///./src/ui/components/FeaturedBreweries.ts","webpack:///./src/ui/components/Filter.ts","webpack:///./src/ui/components/Loader.ts","webpack:///./src/services/mapbox/mapbox.ts","webpack:///./src/ui/components/Map.ts","webpack:///./src/ui/components/NavbarItem.ts","webpack:///./src/ui/components/Navbar.ts","webpack:///./src/ui/components/Pagination.ts","webpack:///./src/ui/components/Tag.ts","webpack:///./src/ui/components/Title.ts","webpack:///./src/ui/views/HomeView.ts","webpack:///./src/services/breweryDB/resources/brewery/codec.ts","webpack:///./src/services/breweryDB/resources/brewery/transform.ts","webpack:///./src/services/http/request.ts","webpack:///./src/services/http/types.ts","webpack:///./src/services/http/header.ts","webpack:///./src/services/http/query.ts","webpack:///./src/services/breweryDB/response.ts","webpack:///./src/services/breweryDB/action.ts","webpack:///./src/services/breweryDB/query.ts","webpack:///./src/services/breweryDB/header.ts","webpack:///./src/services/breweryDB/request.ts","webpack:///./src/services/breweryDB/resources/brewery/actions.ts","webpack:///./src/ui/queryState/queryRepository.ts","webpack:///./src/ui/queryState/queryState.ts","webpack:///./src/ui/router/query.ts","webpack:///./src/ui/queryState/types.ts","webpack:///./src/ui/folds/taskState.ts","webpack:///./src/ui/concerns/apiTask/apiTaskRepository.ts","webpack:///./src/ui/concerns/apiTask/useApiTask.ts","webpack:///./src/ui/views/IndexView.ts","webpack:///./src/ui/views/DetailView.ts","webpack:///./src/ui/views/AboutView.ts","webpack:///./src/ui/layouts/EmptyLayout.ts","webpack:///./src/ui/layouts/NavbarLayout.ts","webpack:///./src/ui/router/routes.ts","webpack:///./src/ui/router/router.ts","webpack:///./src/ui/i18n/index.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","RouteName","Box","setup","_","slots","class","Table","head","undefined","default","emptyVNode","emptyString","v","toVNodes","onSome","toLink","href","toParagraph","renderBrewery","brewery","to","Detail","params","id","address","city","BreweryTable","props","list","type","required","map","Button","Container","ApiError","code","this","ApiErrorCode","lookup","dictionary","fallback","apiError","NetworkError","ParseError","DecodeError","ErrorMessage","error","emit","Subtitle","onClick","FeaturedBreweries","breweries","Filter","label","String","onInput","event","stopPropagation","target","Loader","xmlns","fill","viewBox","innerHTML","TOKEN","SMALL_SIZE","staticMap","width","height","longitude","latitude","zoom","smallStaticMap","Map","coordinates","style","src","NavbarItem","routeName","Navbar","Home","Index","About","setPage","page","router","currentRoute","query","Pagination","Number","Tag","Title","HomeView","breweryCodec","brewery_type","street","optionFromNullable","state","country","phone","NumberFromString","website_url","updated_at","DateFromISOString","breweryRecordCodec","breweryListCodec","breweryTransformer","website","updatedAt","breweryRecordTransformer","breweryListTransformer","breweryList","method","url","Request","getRequest","execute","request","fetch","MimeType","HttpHeader","setHeaders","headers","h","Headers","forEach","set","setQuery","URL","searchParams","toString","ApiResponse","ok","status","parsed","parse","response","json","validate","res","decoder","decode","string","replace","number","setBaseHeaders","ContentType","ApplicationJson","Accept","setAuthorizationHeaders","Authorization","authorizedApiGetRequest","BASE_URL","recordUrl","encodeBreweryListQuery","URLSearchParams","by_city","by_name","getList","DEBOUNCE_TIMEOUT","timeout","repository","initialize","unset","flush","flushDebounced","clearTimeout","setTimeout","queryState","encode","defaultValue","encodedDefaultValue","encodedValue","stringEncoder","stringDecoder","numberEncoder","numberDecoder","parseInt","isNaN","loader","onInitial","onPending","onError","onSuccess","taskState","pending","toVNodesPending","taskKey","executionKey","mutation","start","useApiTask","lazyTaskEither","executeTask","updateState","onLeft","fromIO","onRight","DEFAULT_PAGE","IndexView","updateFilter","onRetry","DetailView","console","log","JSON","stringify","date","AboutView","EmptyLayout","NavbarLayout","idFromRoute","route","routes","path","component","children","history","i18n","locale","missingWarn","fallbackFormat","messages","en","de","isReady","then","use","mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,cAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,sFCvJSyC,E,yBAAlB,SAAkBA,GAChB,iBACA,mBACA,qBACA,oBAJF,CAAkBA,MAAS,K,gBCEpB,MAAMC,EAAM,eAAgB,CACjCC,MAAO,CAACC,GAAKC,WAAY,IACvB,eAAE,MAAO,CAAEC,MAAO,uCAAyCD,KCFlDE,EAAQ,eAAgB,CACnCJ,MAAO,CAACC,GAAKC,WAAY,IACvB,eAAE,QAAS,CAAEC,MAAO,gBAAkB,CAIpCD,EAAMG,KACF,eACE,QACA,CAAEF,MAAO,wCACT,eAAE,KAAMD,EAAMG,cAEhBC,EAKJ,eAAE,QAASJ,EAAMK,QAAUL,EAAMK,eAAYD,O,gBCfnD,MAAME,EAAa,IAAM,KACnBC,EAAc,IAAM,GAMb,EAAW,kBAAKA,EAAcC,GAAcA,GAM5CC,EAAeC,GAC1B,kBAAKJ,EAAYI,GAKNC,EAASF,EAAUD,GAAc,eAAE,IAAK,CAAEI,KAAMJ,GAAKA,IAKrDK,EAAcJ,EAAUD,GAAc,eAAE,IAAKA,IChBpDM,EAAiBC,GACrB,eAAE,KAAM,CAIN,eACE,KACA,eACE,OACA,CACEC,GAAI,CACF7C,KAAMyB,EAAUqB,OAChBC,OAAQ,CAAEC,GAAIJ,EAAQI,MAG1B,IAAMJ,EAAQ5C,OAOlB,eAAE,KAAM,EAAgB4C,EAAQK,QAAQC,SAG/BC,EAAe,eAAgB,CAC1CC,MAAO,CACLC,KAAM,CACJC,KAAMjF,OACNkF,UAAU,IAGd5B,MAAOyB,GAAS,KACd,MAAM,EAAE1C,GAAM,iBACd,OAAO,eACLqB,EACA,GACA,CACEC,KAAM,IAAM,CAAC,eAAE,KAAMtB,EAAE,SAAU,eAAE,KAAMA,EAAE,UAC3CwB,QAAS,IAAMkB,EAAMC,KAAKG,IAAIb,QCjDzBc,EAAS,eAAgB,CACpC9B,MAAO,CAACC,GAAKC,WAAY,IACvB,eAAE,SAAU,CAAEC,MAAO,iCAAmCD,KCF/C6B,EAAY,eAAgB,CACvC/B,MAAO,CAACC,GAAKC,WAAY,IAAM,eAAE,MAAO,CAAEC,MAAO,qBAAuBD,KCGnE,MAAM8B,EAGX,YAAYC,GACVC,KAAKD,KAAOA,GAOhB,IAAkBE,GAAlB,SAAkBA,GAChB,uCACA,mCACA,sCAHF,CAAkBA,MAAY,K,4BCPvB,MAAMC,EAAS,CACpBC,EACAjD,EACAkD,IAEA,kBACE,sBAASD,EAAWjD,IACpB,uBAAU,IAAMkD,ICPb,SAASC,EAASN,GACvB,MAAM,EAAElD,GAAM,iBAEd,GAAIkD,GAAQ,KAAOA,GAAQ,IACzB,OAAOlD,EAAE,gBAMX,MAAM8C,EAAqC,CACzC,CAACM,EAAaK,cAAe,IAAMzD,EAAE,iBACrC,CAACoD,EAAaM,YAAa,IAAM1D,EAAE,eACnC,CAACoD,EAAaO,aAAc,IAAM3D,EAAE,gBACpC,CAAC,QAAY,IAAMA,EAAE,aACrB,CAAC,QAAY,IAAMA,EAAE,oBAGvB,OAAOqD,EAAOP,EAAKI,EAAMlD,EAAE,kBCtBtB,MAAM4D,EAAe,eAAgB,CAC1ClB,MAAO,CACLmB,MAAO,CACLjB,KAAMK,EACNJ,UAAU,IAGd5B,MAAO,CAACyB,GAASoB,UAAW,KAC1B,MAAM,EAAE9D,GAAM,iBACd,OAAO,eAAEgB,EAAK,CAAEI,MAAO,2BAA6B,IAAM,CAIxD,eAAE2C,EAAU,IAAM/D,EAAE,UAKpB,eAAE,IAAK,CAAEoB,MAAO,QAAUoC,EAASd,EAAMmB,MAAMX,OAK/C,eAAEH,EAAQ,CAAEiB,QAAS,IAAMF,EAAK,UAAY,IAAM9D,EAAE,eC3B7C+D,EAAW,eAAgB,CACtC9C,MAAO,CAACC,GAAKC,WAAY,IAAM,eAAE,KAAM,CAAEC,MAAO,qBAAuBD,KCSnE,EAAgB,EAAG7B,OAAMgD,QAC7B,eACE,KACA,eACE,OACA,CAAEH,GAAI,CAAE7C,KAAMyB,EAAUqB,OAAQC,OAAQ,CAAEC,QAC1C,IAAMhD,IAIC2E,EAAoB,eAAgB,CAC/CvB,MAAO,CACLwB,UAAW,CACTtB,KAAMjF,OACNkF,UAAU,IAGd5B,MAAOyB,GAAS,KACd,MAAM,EAAE1C,GAAM,iBACd,MAAO,CAIL,eAAE+D,EAAU,IAAM/D,EAAE,uBAKpB,eAAE,KAAM,CAAEoB,MAAO,kBAAoBsB,EAAMwB,UAAUpB,IAAI,QCtClDqB,EAAS,eAAgB,CACpCzB,MAAO,CACL0B,MAAO,CACLxB,KAAMyB,OACNxB,UAAU,GAEZ9C,MAAO,CACL6C,KAAMyB,OACNxB,UAAU,IAGd5B,MAAO,CAACyB,GAASoB,UAAW,IAC1B,eAAE,QAAS,CAAE1C,MAAO,qCAAuC,CAIzD,eAAE,MAAO,CAAEA,MAAO,yBAA2BsB,EAAM0B,OAKnD,eAAE,QAAS,CACThD,MAAO,kDACPrB,MAAO2C,EAAM3C,MACbuE,QAAUC,IAKRA,EAAMC,kBAOFD,EAAME,QACRX,EAAK,QAAUS,EAAME,OAA4B1E,cCpChD2E,EAAS,eAAgB,CACpCzD,MAAO,IAAM,IACX,eAAED,EAAK,CAAEI,MAAO,QAAU,IACxB,eAAE,MAAO,CACPA,MAAO,6CACPuD,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,UACE,kRCVJC,EACJ,+FAEIC,EAAa,IAENC,EAAY,CAACC,EAAeC,IAAmB,EACxDC,YAAWC,YACbC,IAIA,8DAAIF,KAAaC,KAAYC,OACzBJ,KAASC,kBACIJ,EAENQ,EAAiBN,EAAUD,EAAYA,GCbvCQ,EAAM,eAAgB,CACjC9C,MAAO,CACL+C,YAAa,CACX7C,KAAMjF,OACNkF,UAAU,IAGd5B,MAAOyB,GAAS,IACd,eAAE,MAAO,CACPtB,MAAO,UACPsE,MAAO,0DACPC,IAAKJ,EAAe7C,EAAM+C,YAAa,QCZhCG,EAAa,eAAgB,CACxClD,MAAO,CACLmD,UAAW,CACTjD,KAAMyB,OACNxB,UAAU,IAGd5B,MAAO,CAACyB,GAASvB,WAAY,IAC3B,eACE,OACA,CACEC,MAAO,iBACPe,GAAI,CAAE7C,KAAMoD,EAAMmD,YAEpB1E,KCZO2E,EAAS,eAAgB,CACpC7E,MAAO,IAAM,KACX,MAAM,EAAEjB,GAAM,iBACd,OAAO,eACL,MACA,CAAEoB,MAAO,mDACT,CACE,eAAEwE,EAAY,CAAEC,UAAW9E,EAAUgF,MAAQ,IAAM/F,EAAE,SACrD,eAAE4F,EAAY,CAAEC,UAAW9E,EAAUiF,OAAS,IAAMhG,EAAE,cACtD,eAAE4F,EAAY,CAAEC,UAAW9E,EAAUkF,OAAS,IAAMjG,EAAE,eCLxDkG,EAAWC,IAAiB,IAC7BC,GAAOC,aAAatG,MAAMuG,MAC7BH,SAGWI,EAAa,eAAgB,CACxC7D,MAAO,CACLyD,KAAM,CACJvD,KAAM4D,OACN3D,UAAU,IAGd5B,MAAOyB,GAAS,KACd,MAAM,EAAE1C,GAAM,iBAEd,OAAO,eAAE,MAAO,CAAEoB,MAAO,QAAU,CAIjCsB,EAAMyD,KAAO,EACT,eAAE,OAAY,CAAEhE,GAAI,CAAEmE,MAAOJ,EAAQxD,EAAMyD,KAAO,KAAQ,IACxDnG,EAAE,kBAEJ,KAKJ,eACE,OACA,CAAEoB,MAAO,UAAWe,GAAI,CAAEmE,MAAOJ,EAAQxD,EAAMyD,KAAO,KACtD,IAAMnG,EAAE,mBCtCHyG,EAAM,eAAgB,CACjCxF,MAAO,CAACC,GAAKC,WAAY,IACvB,eACE,OACA,CACEC,MACE,gFAEJD,KCROuF,EAAQ,eAAgB,CACnCzF,MAAO,CAACC,GAAKC,WAAY,IAAM,eAAE,KAAM,CAAEC,MAAO,sBAAwBD,KCG7DwF,EAAW,eAAgB,CACtC,QACE,MAAM,EAAE3G,GAAM,iBAEd,MAAO,IACL,eAAEgB,EAAK,CAAEI,MAAO,SAAW,IAAM,CAC/B,eAAEsF,EAAO,IAAM1G,EAAE,sBACjB,eAAE,IAAKA,EAAE,kCACT,eAAE,OAAY,CAAEmC,GAAI,CAAE7C,KAAMyB,EAAUiF,QAAW,IAC/ChG,EAAE,uB,gECJL,MAAM4G,EAAe,OAAO,CACjCtH,KAAM,OACNuH,aAAc,OACdC,OAAQ,OAAAC,EAAA,MAAmB,QAC3BvE,KAAM,OAAAuE,EAAA,MAAmB,QACzBC,MAAO,OAAAD,EAAA,MAAmB,QAC1BE,QAAS,OAAAF,EAAA,MAAmB,QAC5BG,MAAO,OAAAH,EAAA,MAAmB,QAC1B3B,UAAW,OAAA2B,EAAA,MAAmBI,EAAA,MAC9B9B,SAAU,OAAA0B,EAAA,MAAmBI,EAAA,MAC7BC,YAAa,OAAAL,EAAA,MAAmB,QAChCM,WAAYC,EAAA,OAMDC,EAAqB,OAAO,CACvCjF,GAAI,OACJhD,KAAM,OACNkD,KAAM,OAAAuE,EAAA,MAAmB,QACzBE,QAAS,OAAAF,EAAA,MAAmB,UAMjBS,EAAmB,OAAQD,GC7B3BE,EACXvF,IACY,CACZ5C,KAAM4C,EAAQ5C,KACdsD,KAAMV,EAAQ2E,aACdtE,QAAS,CACPuE,OAAQ5E,EAAQ4E,OAChBtE,KAAMN,EAAQM,KACdwE,MAAO9E,EAAQ8E,MACfC,QAAS/E,EAAQ+E,SAEnBxB,YAEE,oBAAOvD,EAAQkD,YAAc,oBAAOlD,EAAQmD,UACxC,kBAAK,CACHD,UAAW,uBAAkB,IAAM,EAAxB,CAA2BlD,EAAQkD,WAC9CC,SAAU,uBAAkB,IAAM,EAAxB,CAA2BnD,EAAQmD,YAE/C,UACN6B,MAAOhF,EAAQgF,MACfQ,QAASxF,EAAQkF,YACjBO,UAAWzF,EAAQmF,aAORO,EACX1F,IACkB,CAClBI,GAAIJ,EAAQI,GACZhD,KAAM4C,EAAQ5C,KACdiD,QAAS,CACPC,KAAMN,EAAQM,KACdyE,QAAS/E,EAAQ+E,WAQRY,GACXC,GACgBA,EAAYhF,IAAI8E,G,iBC/ClC,MAAM,GAAWG,GAAoBC,GACnC,IAAIC,QAAQD,EAAK,CAAED,WAMRG,GAAa,GAAQ,OAwBrBC,IAlBa,GAAQ,OAMP,GAAQ,QAMN,GAAQ,UAMbC,GACtB,sBAAS,IAAMC,MAAMD,GAAU,gBCvCjC,IAAkBE,GAIAC,IAJlB,SAAkBD,GAChB,yCADF,CAAkBA,QAAQ,KAI1B,SAAkBC,GAChB,qBACA,mCACA,gCAHF,CAAkBA,QAAU,KCArB,MAAMC,GAAcC,GAAsBL,IAI/C,MAAMM,EAAI,IAAIC,QAAQP,EAAQK,SAU9B,OALAA,EAAQG,QAAQ,CAAC7I,EAAOM,IAAQqI,EAAEG,IAAIxI,EAAKN,IAKpC,IAAIkI,QAAQG,EAAS,CAAEK,QAASC,KCd5BI,GAAYxC,GAA4B8B,IAInD,MAAMJ,EAAM,IAAIe,IAAIX,EAAQJ,KAU5B,OALA1B,EAAMsC,QAAQ,CAAC7I,EAAOM,IAAQ2H,EAAIgB,aAAaH,IAAIxI,EAAKN,IAKjD,IAAIkI,QAAQD,EAAIiB,WAAYb,ICF9B,MAAMc,GASX,YAAYC,EAAaC,EAAgBX,EAAkBY,GACzDlG,KAAKgG,GAAKA,EACVhG,KAAKiG,OAASA,EACdjG,KAAKsF,QAAUA,EACftF,KAAKkG,OAASA,GAUX,MAAMC,GAASC,GACpB,kBACE,sBACE,IAAMA,EAASC,OACf,IAAM,IAAIvG,EAASG,EAAaM,aAElC,iBACG2F,GACC,IAAIH,GAAYK,EAASJ,GAAII,EAASH,OAAQG,EAASd,QAASY,KAW3DI,GAAW,kBACtB,4BACEC,GAAOA,EAAIP,GACXO,GAAO,IAAIzG,EAASyG,EAAIN,SAE1B,iBAQW,GAAaO,GACxB,kBACGJ,GAA0BA,EAASF,OACpCM,EAAQC,OACR,sBAAQ,IAAM,IAAI3G,EAASG,EAAaO,cACxC,iBC7DS,GAAU,kBACrBwE,GACA,qBAAQ,IAAM,IAAIlF,EAASG,EAAaK,eACxC,mBAAM6F,IACN,mBAAMG,KCPKI,GAAoCrM,GAAKA,EAAEsM,QAAQ,KAAM,KAMzDC,GAAqCvM,GAAcA,EAAEyL,WCZrDe,GAAiBxB,GAC5B,IAAIG,QAAQ,CACV,CAACJ,GAAW0B,aAAc3B,GAAS4B,gBACnC,CAAC3B,GAAW4B,QAAS7B,GAAS4B,mBAQrBE,GAA0B5B,GACrC,IAAIG,QAAQ,CACV,CAACJ,GAAW8B,eAAgB,kBCLnBC,IANgB,kBAAKpC,GAAY8B,IAMP,kBACrC9B,GACAkC,KCAIG,GAAW,0CAMXC,GAAalI,GAAuB,GAAGiI,MAAYjI,IAenDmI,GAA0BnE,GAC9B,IAAIoE,gBAAgB,CAClBC,QAAS,GAASrE,EAAM9D,MACxBoI,QAAS,GAAStE,EAAMhH,MACxB6G,KAAM,GAASG,EAAMH,QAOZ0E,GAAWvE,GACtB,kBAEEiE,GAGAD,GAGAxB,GAAS2B,GAAuBnE,IAGhC,GAGA,mBAAM,GAAOkB,IAGb,iBAAIK,KAOKlI,GAAM,kBAEjB6K,GAGAF,GAGA,GAGA,mBAAM,GAAO1D,IAGb,iBAAIa,ICjFAqD,GAAmB,IAMzB,IAKIC,GALAC,GAA4B,GAUzB,MAAMC,GAAa,KACxBD,GAAa,IAAK5E,GAAOC,aAAatG,MAAMuG,QASjCuC,GAAM,CAACxI,EAAaN,KAC/BiL,GAAW3K,GAAON,GAQPmL,GAAS7K,WACb2K,GAAW3K,IAMP8K,GAAQ,KACnB/E,GAAOpI,KAAK,CAAEsI,MAAO0E,MAMVI,GAAiB,KAC5BxK,OAAOyK,aAAaN,IACpBA,GAAUnK,OAAO0K,WAAWH,GAAOL,KC7CxBS,GAAa,CACxBlL,EACAmL,EACA5B,EACA6B,KAKA,MAAMC,EAAsBF,EAAOC,GAEnC,OAAO,eAAY,CAIjB9L,IAAK,KACH,MAAMI,EAAQqG,GAAOC,aAAatG,MAAMuG,MAAMjG,GAK9C,MAAqB,kBAAVN,EACF0L,EAMF7B,EAAO7J,EAAO0L,IAOvB5C,IAAK9I,IAIH,MAAM4L,EAAeH,EAAOzL,GAQ5B4L,IAAiBD,EACbR,GAAM7K,GACNwI,GAAIxI,EAAKsL,GAKbP,SC7COQ,GAA2CpO,GAAKA,EAChDqO,GAA2CrO,GAAKA,EAEhDsO,GAA4CtO,GACvDA,EAAEyL,WACS8C,GAA2C,CACtDvO,EACA+F,EAAW,KAEX,MAAM8F,EAAS2C,SAASxO,EAAG,IAC3B,OAAOyO,MAAM5C,GAAU9F,EAAW8F,GClBvB,GAAS,CAAChJ,EAAakD,EAAW,IAC7CgI,GAAmBlL,EAAKyL,GAAeC,GAAexI,GAO3C,GAAS,CAAClD,EAAakD,EAAW,KAC7CgI,GAAmBlL,EAAKuL,GAAeC,GAAetI,GCZlD,GAAa,IAAM,KACnB2I,GAAS,IAAM,eAAExH,GAUV,GAAW,CACtByH,EACAC,EACAC,EACAC,IACIC,GACAA,EAAUC,QAAgBJ,IAC1B,UAAWG,EAAkBF,EAAQE,EAAU1I,OAC/C,WAAY0I,EAAkBD,EAAUC,EAAUhO,QAC/C4N,IAQIM,GAAkB,CAAIJ,EAAkBC,IACnD,GAAS,GAAYJ,GAAQG,EAASC,G,2CCjCxC,MAAM,GAAqC,GAQrC,GAAc,CAACI,EAAiBC,IACpCC,GACG,KACC,GAAWF,KAAaC,IAC1BC,WACO,GAAWF,KAUTG,GAAQ,KAInB,MAAMH,EAAU,kBACVC,EAAe,kBAUrB,OALA,GAAWD,GAAWC,EAKf,GAAYD,EAASC,IC1BvB,SAASG,GAAcC,GAI5B,MAAMR,EAAY,eAAqB,CAAEC,SAAS,IAK5CQ,EAAc,KAOlB,MAAMC,EAAcJ,KAKpBN,EAAUxM,MAAQ,CAAEyM,SAAS,GAM7B,MAAMU,EAAUrJ,GACd,WAAKsJ,OACHF,EAAY,IAAOV,EAAUxM,MAAQ,CAAEyM,SAAS,EAAO3I,WAOrDuJ,EAAW7O,GACf,WAAK4O,OACHF,EACE,IACGV,EAAUxM,MAAQ,CACjByM,SAAS,EACTjO,OAAQA,KAQlB,mBAAKwO,IAAkB,kBAAKG,EAAQE,GAApC,IAMF,MAAO,CAAEJ,cAAaT,aC1DxB,MAAMc,GAAe,EAERC,GAAY,eAAgB,CACvC,QACE,MAAM,EAAEtN,GAAM,iBAKRmG,EAAO,GAAU,OAAQkH,IACzB7K,EAAO,GAAU,QACjBlD,EAAO,GAAU,SAMjB,YAAE0N,EAAW,UAAET,GAAcO,GAAW,IAC5CjC,GAAQ,CACNrI,KAAMA,EAAKzC,MACXT,KAAMA,EAAKS,MACXoG,KAAMA,EAAKpG,SAGfiN,IAMA,eAAM,CAAC7G,EAAM3D,EAAMlD,GAAO0N,GAO1B,MAAMO,EAAgBX,IACpBA,IACAzG,EAAKpG,MAAQsN,IAMf,MAAO,IAAM,CAIX,eAAE3G,EAAO,IAAM1G,EAAE,cAKjB,eAAE,OAAQ,CAAEoB,MAAO,gBAAkB,CACnC,eAAE+C,EAAQ,CACRC,MAAOpE,EAAE,QACTD,MAAOT,EAAKS,MACZuE,QAAUvE,GAAkBwN,EAAa,IAAOjO,EAAKS,MAAQA,KAE/D,eAAEoE,EAAQ,CACRC,MAAOpE,EAAE,QACTD,MAAOyC,EAAKzC,MACZuE,QAAUvE,GAAkBwN,EAAa,IAAO/K,EAAKzC,MAAQA,OAQjE,GACE8D,GAAS,eAAED,EAAc,CAAEC,QAAO2J,QAASR,IAC1CrK,GAAsB,eAAE3B,EAAK,IAAM,eAAEyB,EAAc,CAAEE,UAFxD,CAGE4J,EAAUxM,OACZ,eAAEwG,EAAY,CAAEJ,KAAMA,EAAKpG,YC3EpB0N,GAAa,eAAgB,CACxC/K,MAAO,CACLJ,GAAI,CACFM,KAAM4D,OACN3D,UAAU,IAGd,MAAMH,GACJ,MAAM,EAAE1C,EAAC,EAAEX,GAAM,kBAMX,YAAE2N,EAAW,UAAET,GAAcO,GAAW,IAAMnN,GAAI+C,EAAMJ,KAc9D,OAbA0K,IAOA,eAAMtK,EAAO,IAAMgL,QAAQC,IAAIC,KAAKC,UAAUnL,KAC9C,eAAMA,EAAOsK,GAKN,IAAM,CAKX,GACEnJ,GAAS,eAAED,EAAc,CAAEC,QAAO2J,QAASR,IAC1CzO,GACC,eAAEyC,EAAK,CAAEI,MAAO,QAAU,IAAM,CAC9B,eAAE,MAAO,CAAEA,MAAO,UAAY,CAI5B,eAAEsF,EAAO,IAAM,CAACnI,EAAOe,KAAM,eAAEmH,EAAK,IAAMlI,EAAOqE,QAKjD,EAAmBrE,EAAOgE,QAAQuE,QAClC,EAAmBvI,EAAOgE,QAAQC,MAClC,EAAmBjE,EAAOgE,QAAQyE,OAClC,EAAmBzI,EAAOgE,QAAQ0E,SAKlC,EAAiBlH,GACf,eAAE,IAAKC,EAAE,iBAAkB,CAAED,WAD/B,CAEExB,EAAO2I,OACT,EAAc3I,EAAOmJ,SAKrB,eACE,IACA,CAAEtG,MAAO,qCACTpB,EAAE,0BAA2B,CAAE8N,KAAMzO,EAAEd,EAAOoJ,gBAOlD,EAAiBlC,GACf,eAAED,EAAK,CAAEC,gBADX,CAEElH,EAAOkH,eAzCf,CA2CE8G,EAAUxM,OAKZ,eAAEkE,EAAmB,CACnBC,UAAW,CACT,CAAE5E,KAAM,2BAA4BgD,GAAI,KACxC,CAAEhD,KAAM,2BAA4BgD,GAAI,KACxC,CAAEhD,KAAM,0CAA2CgD,GAAI,UCjGpDyL,GAAY,eAAgB,CACvC,QACE,MAAM,EAAE/N,GAAM,iBACd,MAAO,IACL,eAAEgB,EAAK,IAAM,CACX,eAAE0F,EAAO,IAAM1G,EAAE,mBACjB,eACE,IACAA,EACE,sFAGJ,eAAE,IAAKA,EAAE,wDACT,eACE,IACA,CAAE+B,KAAM,4CACR,iDChBGiM,GAAc,eAAgB,CACzC/M,MAAO,IAAM,IAAM,eAAE+B,EAAW,IAAM,eAAE,WCA7BiL,GAAe,eAAgB,CAC1ChN,MAAO,IAAM,IACX,eAAE,MAAO,CAAEG,MAAO,aAAe,CAC/B,eAAE0E,GACF,eAAE9C,EAAW,IAAM,eAAE,aCErBkL,GAAeC,IAAmC,CACtD7L,GAAIyJ,GAAcoC,EAAM9L,OAAOC,MAQpB8L,GAA2B,CACtC,CACEC,KAAM,IACNC,UAAWN,GACXO,SAAU,CACR,CACEF,KAAM,GACN/O,KAAMyB,EAAUgF,KAChBuI,UAAW3H,KAIjB,CACE0H,KAAM,IACNC,UAAWL,GACXM,SAAU,CACR,CACEF,KAAM,YACN/O,KAAMyB,EAAUiF,MAChBsI,UAAWhB,IAEb,CACEe,KAAM,gBACN/O,KAAMyB,EAAUqB,OAChBkM,UAAWb,GACX/K,MAAOwL,IAET,CACEG,KAAM,QACN/O,KAAMyB,EAAUkF,MAChBqI,UAAWP,OC5CN3H,GAAS,eAAa,CAIjCoI,QAAS,eAAqB,eAC9BJ,YCTWK,GAAO,eAAW,CAC7BC,OAAQ,KACRC,aAAa,EACbC,gBAAgB,EAChBC,SAAU,CACRC,GAAI,GACJC,GAAI,M,UCER3I,GAAO4I,UAAUC,KAAKhE,IAKtB,eAAU,QACPiE,IAAI9I,IACJ8I,IAAIT,IACJU,MAAM,S","file":"js/app.d30ca572.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/breweries/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const enum RouteName {\n  Home = \"home\",\n  Index = \"index\",\n  Detail = \"detail\",\n  About = \"about\"\n}\n","import { h, defineComponent } from \"vue\";\n\nexport const Box = defineComponent({\n  setup: (_, { slots }) => () =>\n    h(\"div\", { class: \"bg-white shadow rounded-lg p-4 mb-6\" }, slots)\n});\n","import { h, defineComponent } from \"vue\";\n\nexport const Table = defineComponent({\n  setup: (_, { slots }) => () =>\n    h(\"table\", { class: \"w-full -my-3\" }, [\n      /**\n       * Display header row in a thead if there is a slot called `head`.\n       */\n      slots.head\n        ? h(\n            \"thead\",\n            { class: \"text-left border-b-2 border-gray-400\" },\n            h(\"tr\", slots.head())\n          )\n        : undefined,\n\n      /**\n       * Display data in tbody if there is a slot called `default`.\n       */\n      h(\"tbody\", slots.default ? slots.default() : undefined)\n    ])\n});\n","import { h } from \"vue\";\nimport { fold } from \"fp-ts/lib/Option\";\nimport { VNodes } from \"../types\";\n\nconst emptyVNode = () => null;\nconst emptyString = () => \"\";\n\n/**\n * Folds an `Option<string>` into its value or an empty string\n * @param option The Option to fold\n */\nexport const toString = fold(emptyString, (v: string) => v);\n\n/**\n * Folds an `Option<T>` into VNodes using the passed callback or to null\n * @param onSome the callback to use to convert the T value to VNodes\n */\nexport const toVNodes = <T>(onSome: (v: T) => VNodes) =>\n  fold(emptyVNode, onSome);\n\n/**\n * Folds an `Option<string>` into an anchor tag or nothing\n */\nexport const toLink = toVNodes((v: string) => h(\"a\", { href: v }, v));\n\n/**\n * Folds an `Option<string>` into a paragraph or nothing\n */\nexport const toParagraph = toVNodes((v: string) => h(\"p\", v));\n","import { h, defineComponent } from \"vue\";\nimport { Table } from \"./Table\";\nimport { BreweryList, BreweryRecord } from \"@/entities\";\nimport { RouterLink } from \"vue-router\";\nimport { RouteName } from \"../router\";\nimport * as option from \"@/ui/folds/option\";\nimport { useI18n } from \"vue-i18n\";\n\n/**\n * Renders a brewery to a table row\n * @param brewery the brewery to render\n */\nconst renderBrewery = (brewery: BreweryRecord) =>\n  h(\"tr\", [\n    /**\n     * Name\n     */\n    h(\n      \"td\",\n      h(\n        RouterLink,\n        {\n          to: {\n            name: RouteName.Detail,\n            params: { id: brewery.id }\n          }\n        },\n        () => brewery.name\n      )\n    ),\n\n    /**\n     * City\n     */\n    h(\"td\", option.toString(brewery.address.city))\n  ]);\n\nexport const BreweryTable = defineComponent({\n  props: {\n    list: {\n      type: Object as () => BreweryList,\n      required: true\n    }\n  },\n  setup: props => () => {\n    const { t } = useI18n();\n    return h(\n      Table,\n      {},\n      {\n        head: () => [h(\"th\", t(\"Name\")), h(\"th\", t(\"City\"))],\n        default: () => props.list.map(renderBrewery)\n      }\n    );\n  }\n});\n","import { h, defineComponent } from \"vue\";\n\nexport const Button = defineComponent({\n  setup: (_, { slots }) => () =>\n    h(\"button\", { class: \"bg-gray-300 rounded px-4 py-1\" }, slots)\n});\n","import { h, defineComponent } from \"vue\";\n\nexport const Container = defineComponent({\n  setup: (_, { slots }) => () => h(\"div\", { class: \"max-w-3xl mx-auto\" }, slots)\n});\n","/**\n * Represents a brewery API error\n * @class\n *\n * @param code The HTTP status code of the error\n */\nexport class ApiError {\n  public code: number;\n\n  constructor(code: number) {\n    this.code = code;\n  }\n}\n\n/**\n * Custom error codes for the brewery DB API\n */\nexport const enum ApiErrorCode {\n  NetworkError = 10,\n  ParseError = 20,\n  DecodeError = 30\n}\n","import { pipe } from \"fp-ts/lib/function\";\nimport { getOrElse, tryCatch } from \"fp-ts/lib/Option\";\nimport { LazyTranslationRecord } from \"./types\";\n\n/**\n * Look up a dictionary value\n * @param dictionary the dictionary\n * @param key the key to look up\n * @param fallback value to use when not found\n */\nexport const lookup = <T extends string | number>(\n  dictionary: LazyTranslationRecord<T>,\n  key: T,\n  fallback: string\n) =>\n  pipe(\n    tryCatch(dictionary[key]),\n    getOrElse(() => fallback)\n  );\n","import { ApiErrorCode } from \"@/services/breweryDB/error\";\nimport { FORBIDDEN, NOT_FOUND } from \"http-status-codes\";\nimport { lookup } from \"./lookup\";\nimport { useI18n } from \"vue-i18n\";\nimport { LazyTranslationRecord } from \"./types\";\n\n/**\n * Turn an ApiError code to a human readable string\n * @param code the error code\n */\nexport function apiError(code: number): string {\n  const { t } = useI18n();\n\n  if (code >= 500 && code <= 599) {\n    return t(\"Server error\");\n  }\n\n  /**\n   * Map error codes to translated strings. The translations are lazy and are only evaluated when needed.\n   */\n  const map: LazyTranslationRecord<number> = {\n    [ApiErrorCode.NetworkError]: () => t(\"Network error\"),\n    [ApiErrorCode.ParseError]: () => t(\"Parse error\"),\n    [ApiErrorCode.DecodeError]: () => t(\"Decode error\"),\n    [FORBIDDEN]: () => t(\"Forbidden\"),\n    [NOT_FOUND]: () => t(\"Not found error\")\n  };\n\n  return lookup(map, code, t(\"Unknown error\"));\n}\n","import { h, defineComponent } from \"vue\";\nimport { apiError } from \"../dictionaries\";\nimport { Button, Box, Subtitle } from \".\";\nimport { ApiError } from \"@/services/breweryDB/error\";\nimport { useI18n } from \"vue-i18n\";\n\nexport const ErrorMessage = defineComponent({\n  props: {\n    error: {\n      type: ApiError,\n      required: true\n    }\n  },\n  setup: (props, { emit }) => () => {\n    const { t } = useI18n();\n    return h(Box, { class: \"border-red-400 border-4\" }, () => [\n      /**\n       * Title\n       */\n      h(Subtitle, () => t(\"Error\")),\n\n      /**\n       * Human readable error message\n       */\n      h(\"p\", { class: \"mb-3\" }, apiError(props.error.code)),\n\n      /**\n       * Retry button\n       */\n      h(Button, { onClick: () => emit(\"retry\") }, () => t(\"Retry\"))\n    ]);\n  }\n});\n","import { h, defineComponent } from \"vue\";\n\nexport const Subtitle = defineComponent({\n  setup: (_, { slots }) => () => h(\"h2\", { class: \"text-xl font-bold\" }, slots)\n});\n","import { h, defineComponent } from \"vue\";\nimport { Subtitle } from \"./Subtitle\";\nimport { useI18n } from \"vue-i18n\";\nimport { RouterLink } from \"vue-router\";\nimport { RouteName } from \"../router\";\n\ntype Brewery = { name: string; id: number };\n\n/**\n * Renders a featured brewery\n * @param brewery the brewery to render\n */\nconst renderBrewery = ({ name, id }: Brewery) =>\n  h(\n    \"li\",\n    h(\n      RouterLink,\n      { to: { name: RouteName.Detail, params: { id } } },\n      () => name\n    )\n  );\n\nexport const FeaturedBreweries = defineComponent({\n  props: {\n    breweries: {\n      type: Object as () => Brewery[],\n      required: true\n    }\n  },\n  setup: props => () => {\n    const { t } = useI18n();\n    return [\n      /**\n       * Title\n       */\n      h(Subtitle, () => t(\"Featured breweries\")),\n\n      /**\n       * List\n       */\n      h(\"ul\", { class: \"list-disc pl-6\" }, props.breweries.map(renderBrewery))\n    ];\n  }\n});\n","import { h, defineComponent } from \"vue\";\n\nexport const Filter = defineComponent({\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: String,\n      required: true\n    }\n  },\n  setup: (props, { emit }) => () =>\n    h(\"label\", { class: \"block w-full my-2 sm:w-64 sm:mr-3\" }, [\n      /**\n       * Label for the filter\n       */\n      h(\"div\", { class: \"text-xs text-gray-600\" }, props.label),\n\n      /**\n       * Input for the filter\n       */\n      h(\"input\", {\n        class: \"w-full rounded border border-gray-300 px-2 py-1\",\n        value: props.value,\n        onInput: (event: InputEvent) => {\n          /**\n           * We emit a custom `input` event with the value of the filter (instead of the default InputEvent) so we need\n           * to stop the original InputEvent from propagating.\n           */\n          event.stopPropagation();\n\n          /**\n           * Emit custom input event. The target can be null, and Typescript does not know what kind of element is\n           * emitting the event, so we need to tell it.\n           * https://stackoverflow.com/questions/42066421/property-value-does-not-exist-on-type-eventtarget\n           */\n          if (event.target) {\n            emit(\"input\", (event.target as HTMLInputElement).value);\n          }\n        }\n      })\n    ])\n});\n","import { h, defineComponent } from \"vue\";\nimport { Box } from \"./Box\";\n\nexport const Loader = defineComponent({\n  setup: () => () =>\n    h(Box, { class: \"p-16\" }, () =>\n      h(\"svg\", {\n        class: \"animate-spin h-8 w-8 mx-auto text-gray-500\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        innerHTML:\n          '<circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>' +\n          '<path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>'\n      })\n    )\n});\n","import { GeographicLocation } from \"@/entities\";\n\nconst TOKEN =\n  \"pk.eyJ1IjoiaW50ZXJmZWNvIiwiYSI6ImNrZWZxeHoxMzBzejgzNnQ1N2U1djlvc3kifQ.4FBmQ_sbClfeyMKuunHx1g\";\n\nconst SMALL_SIZE = 200;\n\nexport const staticMap = (width: number, height: number) => (\n  { longitude, latitude }: GeographicLocation,\n  zoom: number\n) =>\n  \"https://api.mapbox.com\" +\n  \"/styles/v1/mapbox/streets-v11/static\" +\n  `/${longitude},${latitude},${zoom},0` +\n  `/${width}x${height}` +\n  `?access_token=${TOKEN}`;\n\nexport const smallStaticMap = staticMap(SMALL_SIZE, SMALL_SIZE);\n","import { h, defineComponent } from \"vue\";\nimport { GeographicLocation } from \"@/entities\";\nimport { smallStaticMap } from \"@/services/mapbox\";\n\nexport const Map = defineComponent({\n  props: {\n    coordinates: {\n      type: Object as () => GeographicLocation,\n      required: true\n    }\n  },\n  setup: props => () =>\n    h(\"img\", {\n      class: \"rounded\",\n      style: \"background-color: #ECE7E2; width: 200px; height: 200px;\",\n      src: smallStaticMap(props.coordinates, 12)\n    })\n});\n","import { h, defineComponent } from \"vue\";\nimport { RouterLink } from \"vue-router\";\n\nexport const NavbarItem = defineComponent({\n  props: {\n    routeName: {\n      type: String,\n      required: true\n    }\n  },\n  setup: (props, { slots }) => () =>\n    h(\n      RouterLink,\n      {\n        class: \"px-3 font-bold\",\n        to: { name: props.routeName }\n      },\n      slots\n    )\n});\n","import { h, defineComponent } from \"vue\";\nimport { NavbarItem } from \"./NavbarItem\";\nimport { useI18n } from \"vue-i18n\";\nimport { RouteName } from \"../router\";\n\nexport const Navbar = defineComponent({\n  setup: () => () => {\n    const { t } = useI18n();\n    return h(\n      \"div\",\n      { class: \"bg-white fixed p-3 shadow inset top-0 inset-x-0\" },\n      [\n        h(NavbarItem, { routeName: RouteName.Home }, () => t(\"Home\")),\n        h(NavbarItem, { routeName: RouteName.Index }, () => t(\"Breweries\")),\n        h(NavbarItem, { routeName: RouteName.About }, () => t(\"About\"))\n      ]\n    );\n  }\n});\n","import { h, defineComponent } from \"vue\";\nimport { RouterLink } from \"vue-router\";\nimport { router } from \"../router\";\nimport { useI18n } from \"vue-i18n\";\n\n/**\n * Sets the page query variable preserving all other set values\n * @param page the value to set\n */\nconst setPage = (page: number) => ({\n  ...router.currentRoute.value.query,\n  page\n});\n\nexport const Pagination = defineComponent({\n  props: {\n    page: {\n      type: Number,\n      required: true\n    }\n  },\n  setup: props => () => {\n    const { t } = useI18n();\n\n    return h(\"div\", { class: \"flex\" }, [\n      /**\n       * Display previous page link if not on first page\n       */\n      props.page > 1\n        ? h(RouterLink, { to: { query: setPage(props.page - 1) } }, () =>\n            t(\"Previous page\")\n          )\n        : null,\n\n      /**\n       * Display next page link\n       */\n      h(\n        RouterLink,\n        { class: \"ml-auto\", to: { query: setPage(props.page + 1) } },\n        () => t(\"Next page\")\n      )\n    ]);\n  }\n});\n","import { h, defineComponent } from \"vue\";\n\nexport const Tag = defineComponent({\n  setup: (_, { slots }) => () =>\n    h(\n      \"span\",\n      {\n        class:\n          \"text-xs font-bold bg-blue-600 text-white rounded px-2 py-1 mx-1 align-middle\"\n      },\n      slots\n    )\n});\n","import { h, defineComponent } from \"vue\";\n\nexport const Title = defineComponent({\n  setup: (_, { slots }) => () => h(\"h1\", { class: \"text-2xl font-bold\" }, slots)\n});\n","import { h, defineComponent } from \"vue\";\nimport { RouterLink } from \"vue-router\";\nimport { RouteName } from \"../router/types\";\nimport { useI18n } from \"vue-i18n\";\nimport { Box, Title } from \"../components\";\n\nexport const HomeView = defineComponent({\n  setup() {\n    const { t } = useI18n();\n\n    return () =>\n      h(Box, { class: \"my-48\" }, () => [\n        h(Title, () => t(\"Brewery DB Search\")),\n        h(\"p\", t(\"A showcase Vue.js application\")),\n        h(RouterLink, { to: { name: RouteName.Index } }, () =>\n          t(\"See breweries\")\n        )\n      ]);\n  }\n});\n","/* eslint-disable @typescript-eslint/camelcase */\nimport * as t from \"io-ts\";\nimport {\n  NumberFromString,\n  DateFromISOString,\n  optionFromNullable\n} from \"io-ts-types\";\n\n/**\n * The codec for a brewery\n */\nexport const breweryCodec = t.type({\n  name: t.string,\n  brewery_type: t.string,\n  street: optionFromNullable(t.string),\n  city: optionFromNullable(t.string),\n  state: optionFromNullable(t.string),\n  country: optionFromNullable(t.string),\n  phone: optionFromNullable(t.string),\n  longitude: optionFromNullable(NumberFromString),\n  latitude: optionFromNullable(NumberFromString),\n  website_url: optionFromNullable(t.string),\n  updated_at: DateFromISOString\n});\n\n/**\n * The codec for a brewery list item\n */\nexport const breweryRecordCodec = t.type({\n  id: t.number,\n  name: t.string,\n  city: optionFromNullable(t.string),\n  country: optionFromNullable(t.string)\n});\n\n/**\n * The codec for a brewery list\n */\nexport const breweryListCodec = t.array(breweryRecordCodec);\n","import * as t from \"io-ts\";\nimport { breweryCodec, breweryRecordCodec, breweryListCodec } from \"./codec\";\nimport { Brewery, BreweryRecord, BreweryList } from \"@/entities\";\nimport { isSome, some, none, getOrElse } from \"fp-ts/lib/Option\";\n\n/**\n * Transforms the decoded brewery data into a Brewery entity.\n * @param brewery the decoded brewery data\n */\nexport const breweryTransformer = (\n  brewery: t.TypeOf<typeof breweryCodec>\n): Brewery => ({\n  name: brewery.name,\n  type: brewery.brewery_type,\n  address: {\n    street: brewery.street,\n    city: brewery.city,\n    state: brewery.state,\n    country: brewery.country\n  },\n  coordinates:\n    // TODO: there must be a better way of writing this\n    isSome(brewery.longitude) && isSome(brewery.latitude)\n      ? some({\n          longitude: getOrElse<number>(() => 0)(brewery.longitude),\n          latitude: getOrElse<number>(() => 0)(brewery.latitude)\n        })\n      : none,\n  phone: brewery.phone,\n  website: brewery.website_url,\n  updatedAt: brewery.updated_at\n});\n\n/**\n * Transforms the decoded brewery list item data into a BreweryRecord entity\n * @param brewery the decoded list item data\n */\nexport const breweryRecordTransformer = (\n  brewery: t.TypeOf<typeof breweryRecordCodec>\n): BreweryRecord => ({\n  id: brewery.id,\n  name: brewery.name,\n  address: {\n    city: brewery.city,\n    country: brewery.country\n  }\n});\n\n/**\n * Transforms the decoded brewery list data into a BreweryList entity\n * @param breweryList the decoded list data\n */\nexport const breweryListTransformer = (\n  breweryList: t.TypeOf<typeof breweryListCodec>\n): BreweryList => breweryList.map(breweryRecordTransformer);\n","import { tryCatch, TaskEither } from \"fp-ts/lib/TaskEither\";\nimport { toError } from \"fp-ts/lib/Either\";\n\n/**\n * Curried create request factory function\n * @param method The HTTP verb to use for the request\n */\nconst request = (method: string) => (url: string) =>\n  new Request(url, { method });\n\n/**\n * Creates a GET request\n * @param url URL of the resource\n */\nexport const getRequest = request(\"get\");\n\n/**\n * Creates a PUT request\n * @param url URL of the resource\n */\nexport const putRequest = request(\"put\");\n\n/**\n * Creates a POST request\n * @param url URL of the resource\n */\nexport const postRequest = request(\"post\");\n\n/**\n * Creates a DELETE request\n * @param url URL of the resource\n */\nexport const deleteRequest = request(\"delete\");\n\n/**\n * A function that executes the passed Request object an returns a TaskEither with an error or a response.\n * @param request The request to execute\n */\nexport const execute = (request: Request): TaskEither<Error, Response> =>\n  tryCatch(() => fetch(request), toError);\n","export const enum MimeType {\n  ApplicationJson = \"application/json\"\n}\n\nexport const enum HttpHeader {\n  Accept = \"Accept\",\n  Authorization = \"Authorization\",\n  ContentType = \"Content-Type\"\n}\n","/**\n * Curried function that takes a request and some headers and returns a new request with the headers added.\n * @param headers Headers to add\n */\nexport const setHeaders = (headers: Headers) => (request: Request) => {\n  /**\n   * Copy the headers of the original request\n   */\n  const h = new Headers(request.headers);\n\n  /**\n   * Set each header value on the new headers\n   */\n  headers.forEach((value, key) => h.set(key, value));\n\n  /**\n   * Create a new request with the new headers\n   */\n  return new Request(request, { headers: h });\n};\n","/**\n * Sets the given query key/value pair to the passed Request object\n * @param query the key/value pairs\n */\nexport const setQuery = (query: URLSearchParams) => (request: Request) => {\n  /**\n   * Copy the url of the original request\n   */\n  const url = new URL(request.url);\n\n  /**\n   * Set each query param value on the new url\n   */\n  query.forEach((value, key) => url.searchParams.set(key, value));\n\n  /**\n   * Create a new request with the new url\n   */\n  return new Request(url.toString(), request);\n};\n","import { tryCatch, map, fromEither, TaskEither } from \"fp-ts/lib/TaskEither\";\nimport { fromPredicate } from \"fp-ts/lib/Either\";\nimport { pipe, flow } from \"fp-ts/lib/function\";\nimport { ApiError, ApiErrorCode } from \"./error\";\nimport { Decoder } from \"io-ts\";\nimport { mapLeft } from \"fp-ts/lib/Either\";\n\n/**\n * Represent a brewery DB Api Response\n * @class\n *\n * @param ok Indicates if the response was successfull\n * @param status The status code of the response\n * @param headers The headers sent by the API with the response\n * @param parsed The parsen JSON body of the response\n */\nexport class ApiResponse {\n  public ok: boolean;\n\n  public status: number;\n\n  public headers: Headers;\n\n  public parsed: unknown;\n\n  constructor(ok: boolean, status: number, headers: Headers, parsed: unknown) {\n    this.ok = ok;\n    this.status = status;\n    this.headers = headers;\n    this.parsed = parsed;\n  }\n}\n\n/**\n * Parses the JSON body of a Response object\n *\n * @param response the Response which body needs to be parsed\n * @returns A `TaskEither` holding an ApiError (if the parsing failed) or an ApiResponse (if the parsing succeded).\n */\nexport const parse = (response: Response): TaskEither<ApiError, ApiResponse> =>\n  pipe(\n    tryCatch(\n      () => response.json(),\n      () => new ApiError(ApiErrorCode.ParseError)\n    ),\n    map(\n      (parsed: unknown) =>\n        new ApiResponse(response.ok, response.status, response.headers, parsed)\n    )\n  );\n\n/**\n * Validates a brewery DB ApiResponse\n *\n * @param a The ApiResponse that need to be validated\n * @returns A `TaskEither` holding an ApiError (if the request was not successful) or an ApiResponse (if the request\n * was successful)\n */\nexport const validate = flow(\n  fromPredicate<ApiError, ApiResponse>(\n    res => res.ok,\n    res => new ApiError(res.status)\n  ),\n  fromEither\n);\n\n/**\n * Curried function that takes a decoder and returns a decode function to decode the body of an ApiResponse\n *\n * @param decoder The decoder to use\n */\nexport const decode = <T>(decoder: Decoder<unknown, T>) =>\n  flow(\n    (response: ApiResponse) => response.parsed,\n    decoder.decode,\n    mapLeft(() => new ApiError(ApiErrorCode.DecodeError)),\n    fromEither\n  );\n","import { execute as executeHttp } from \"@/services/http\";\nimport { flow } from \"fp-ts/lib/function\";\nimport { chain, mapLeft } from \"fp-ts/lib/TaskEither\";\nimport { parse, validate } from \"./response\";\nimport { ApiError, ApiErrorCode } from \"./error\";\n\n/**\n * Executes a brewery DB API request.\n *\n * 1. Request is executed\n * 2. Error is turned into a ApiError(NetworkError), if any\n * 3. Response JSON is parsed\n * 4. Response status code is validated\n * @param request API request to execute\n */\nexport const execute = flow(\n  executeHttp,\n  mapLeft(() => new ApiError(ApiErrorCode.NetworkError)),\n  chain(parse),\n  chain(validate)\n);\n","/**\n * An interface representing a function that can encode an arbitrary data type to a query string value for the brewery\n * DB API\n */\ninterface QueryValueEncoder<T> {\n  (data: T): string;\n}\n\n/**\n * Encodes a string to be used as query string value for the brewery DB API\n * @param i the value to encode\n */\nexport const string: QueryValueEncoder<string> = i => i.replace(/ /g, \"_\");\n\n/**\n * Encodes a number to be used as query string value for the brewery DB API\n * @param i the value to encode\n */\nexport const number: QueryValueEncoder<number> = (i: number) => i.toString();\n\nexport { setQuery } from \"@/services/http\";\n","import { setHeaders, HttpHeader, MimeType } from \"../http\";\n\n/**\n * Sets the required headers for the brewery DB API\n * @param request The Request to set the headers to\n */\nexport const setBaseHeaders = setHeaders(\n  new Headers({\n    [HttpHeader.ContentType]: MimeType.ApplicationJson,\n    [HttpHeader.Accept]: MimeType.ApplicationJson\n  })\n);\n\n/**\n * Sets the `Authorization` header for the brewery DB API\n * @param request The Request to set the headers to\n */\nexport const setAuthorizationHeaders = setHeaders(\n  new Headers({\n    [HttpHeader.Authorization]: \"Bearer token\"\n  })\n);\n","import { flow } from \"fp-ts/lib/function\";\nimport { getRequest } from \"@/services/http\";\nimport { setBaseHeaders, setAuthorizationHeaders } from \"./header\";\n\n/**\n * Creates a GET request to the brewery DB\n * @param url URL of the resource\n */\nexport const apiGetRequest = flow(getRequest, setBaseHeaders);\n\n/**\n * Creates an authenticated GET request to the brewery DB with the `Authorization` header set.\n * @param url URL of the resource\n */\nexport const authorizedApiGetRequest = flow(\n  getRequest,\n  setAuthorizationHeaders\n);\n","/* eslint-disable @typescript-eslint/camelcase */\nimport { chain, map } from \"fp-ts/lib/TaskEither\";\nimport { pipe, flow } from \"fp-ts/lib/function\";\nimport { breweryCodec, breweryListCodec } from \"./codec\";\nimport { breweryListTransformer, breweryTransformer } from \"./transform\";\nimport {\n  authorizedApiGetRequest,\n  setQuery,\n  execute,\n  decode\n} from \"@/services/breweryDB\";\nimport * as q from \"../../query\";\n\n/**\n * The base url of the resource.\n */\nconst BASE_URL = \"https://api.openbrewerydb.org/breweries\";\n\n/**\n * Construct a resource URL from an ID.\n * @param id the ID of the resource\n */\nconst recordUrl = (id: number): string => `${BASE_URL}/${id}`;\n\n/**\n * Specifies the required query string parameters for a list query.\n */\ninterface BreweryListQuery {\n  city: string;\n  name: string;\n  page: number;\n}\n\n/**\n * Encodes the provided query values into strings that can be used in the query string.\n * @param query the query values to encode\n */\nconst encodeBreweryListQuery = (query: BreweryListQuery) =>\n  new URLSearchParams({\n    by_city: q.string(query.city),\n    by_name: q.string(query.name),\n    page: q.number(query.page)\n  });\n\n/**\n * Get a list of breweries\n * @param query the filters for the list\n */\nexport const getList = (query: BreweryListQuery) =>\n  pipe(\n    /** Start with the base url */\n    BASE_URL,\n\n    /** Turn it into a Request */\n    authorizedApiGetRequest,\n\n    /** Add the query to the Request */\n    setQuery(encodeBreweryListQuery(query)),\n\n    /** Execute the request */\n    execute,\n\n    /** Decode the response using the passed codec */\n    chain(decode(breweryListCodec)),\n\n    /** Transform the decoded reponse into a BreweryList entity */\n    map(breweryListTransformer)\n  );\n\n/**\n * Get a single brewery\n * @param id the ID of the brewery\n */\nexport const get = flow(\n  /** Turn the ID into a URL */\n  recordUrl,\n\n  /** Turn it into a Request */\n  authorizedApiGetRequest,\n\n  /** Execute the request */\n  execute,\n\n  /** Decode the response using the passed codec */\n  chain(decode(breweryCodec)),\n\n  /** Transform the decoded reponse into a Brewery entity */\n  map(breweryTransformer)\n);\n","import { LocationQuery } from \"vue-router\";\nimport { router } from \"../router\";\n\n/**\n * Global timeout for all query state flushes. All changes to the global query state are debounced using this value.\n */\nconst DEBOUNCE_TIMEOUT = 500;\n\n/**\n * Buffers the changes to the query string. All changes gets reflected here first, and then get flushed to the url\n * later.\n */\nlet repository: LocationQuery = {};\n\n/**\n * The unique identifier of the current debounced flush operation.\n */\nlet timeout: number;\n\n/**\n * Initializes the repository from the current query string.\n */\nexport const initialize = () => {\n  repository = { ...router.currentRoute.value.query };\n};\n\n/**\n * Sets a query value for a given key.\n *\n * @param key the key of the vale\n * @param value the value to set\n */\nexport const set = (key: string, value: string): void => {\n  repository[key] = value;\n};\n\n/**\n * Unsets a query value for a given key\n *\n * @param key the key of the value\n */\nexport const unset = (key: string): void => {\n  delete repository[key];\n};\n\n/**\n * Flushes the current repository state to the URL using the router.\n */\nexport const flush = (): void => {\n  router.push({ query: repository });\n};\n\n/**\n * Initiates a debounced flush\n */\nexport const flushDebounced = (): void => {\n  window.clearTimeout(timeout);\n  timeout = window.setTimeout(flush, DEBOUNCE_TIMEOUT);\n};\n","import { computed } from \"vue\";\nimport { QueryValueEncoder, QueryValueDecoder, router } from \"@/ui/router\";\nimport { unset, set, flushDebounced } from \"./queryRepository\";\n\n/**\n * Creates a compued variable and stores its value in the query string.\n *\n * @param key the query string variable name\n * @param encode an encoder to turn the value into a string\n * @param decode a decoder to turn an incoming string into a value\n * @param encodedDefaultValue a default value\n */\nexport const queryState = <T>(\n  key: string,\n  encode: QueryValueEncoder<T>,\n  decode: QueryValueDecoder<T>,\n  defaultValue: T\n) => {\n  /**\n   * Memoize encoded default value, since we need this on every set operation.\n   */\n  const encodedDefaultValue = encode(defaultValue);\n\n  return computed<T>({\n    /**\n     * Gets the value for the computed variable from the query string using the router (makes it reactive).\n     */\n    get: () => {\n      const value = router.currentRoute.value.query[key];\n\n      /**\n       * If the query string value is anything but a string (null, undefined, array) return the default value.\n       */\n      if (typeof value !== \"string\") {\n        return defaultValue;\n      }\n\n      /**\n       * Decode value or return default (fallback) value if decoding failed.\n       */\n      return decode(value, defaultValue);\n    },\n\n    /**\n     * Sets the value initiates a flush. If the value set is in fact the default value, it removes it from the query\n     * string.\n     */\n    set: value => {\n      /**\n       * Encode value\n       */\n      const encodedValue = encode(value);\n\n      /**\n       * If the encoded value is the same as the encoded default value, the key/value does not need be set in the query\n       * string, so we just unset the key.\n       *\n       * If they are not the same, we set (overwrite) the encoded value for the key.\n       */\n      encodedValue === encodedDefaultValue\n        ? unset(key)\n        : set(key, encodedValue);\n\n      /**\n       * Initiate a debounced flush since we just changed the query state.\n       */\n      flushDebounced();\n    }\n  });\n};\n","/**\n * A collection of query string keys and values.\n */\nexport interface Query {\n  [name: string]: string;\n}\n\n/**\n * Encodes any type T into a string than can be a query string variable value.\n */\nexport interface QueryValueEncoder<T> {\n  (data: T): string;\n}\n\n/**\n * Decodes any incoming query string value string into a type T.\n */\nexport interface QueryValueDecoder<T> {\n  (data: string, fallback?: T): T;\n}\n\nexport const stringEncoder: QueryValueEncoder<string> = i => i;\nexport const stringDecoder: QueryValueDecoder<string> = i => i;\n\nexport const numberEncoder: QueryValueEncoder<number> = (i: number) =>\n  i.toString();\nexport const numberDecoder: QueryValueDecoder<number> = (\n  i: string,\n  fallback = 0\n) => {\n  const parsed = parseInt(i, 10);\n  return isNaN(parsed) ? fallback : parsed;\n};\n\nexport const filterEmptyQueryValues = (query: Query): Query =>\n  Object.keys(query).reduce((carry, key) => {\n    // eslint-disable-next-line no-param-reassign\n    if (query[key] !== \"\") carry[key] = query[key];\n    return carry;\n  }, {} as Query);\n","import {\n  stringEncoder,\n  stringDecoder,\n  numberEncoder,\n  numberDecoder\n} from \"@/ui/router/query\";\nimport { queryState } from \"./queryState\";\n\n/**\n * Creates a writable computed string variable stored in the query string\n * @param key query string key\n * @param fallback default value, used for fallback as well\n */\nexport const number = (key: string, fallback = 0) =>\n  queryState<number>(key, numberEncoder, numberDecoder, fallback);\n\n/**\n * Creates a writable computed number variable stored in the query string\n * @param key query string key\n * @param fallback default value, used for fallback as well\n */\nexport const string = (key: string, fallback = \"\") =>\n  queryState<string>(key, stringEncoder, stringDecoder, fallback);\n","import { h } from \"vue\";\nimport { VNodes } from \"../types\";\nimport { ApiTaskState } from \"../concerns/apiTask/ApiTaskState\";\nimport { ApiError } from \"@/services/breweryDB\";\nimport { Loader } from \"../components\";\n\ntype constantVNodes = () => VNodes;\ntype OnError = (error: ApiError) => VNodes;\ntype OnSuccess<T> = (result: T) => VNodes;\n\nconst emptyVNode = () => null;\nconst loader = () => h(Loader);\n\n/**\n * Folds a `TaskState` object into VNodes\n *\n * @param onInitial initial state\n * @param onPending pending state\n * @param onError error state, takes the error as parameter\n * @param onSuccess success state, takes the result as parameter\n */\nexport const toVNodes = <T>(\n  onInitial: constantVNodes,\n  onPending: constantVNodes,\n  onError: OnError,\n  onSuccess: OnSuccess<T>\n) => (taskState: ApiTaskState<T>) => {\n  if (taskState.pending) return onPending();\n  if (\"error\" in taskState) return onError(taskState.error);\n  if (\"result\" in taskState) return onSuccess(taskState.result);\n  return onInitial();\n};\n\n/**\n * Folds a `TaskState` object into VNodes with a default loader and empty initial state\n * @param onError error state, takes the error as parameter\n * @param onSuccess success state, takes the result as parameter\n */\nexport const toVNodesPending = <T>(onError: OnError, onSuccess: OnSuccess<T>) =>\n  toVNodes(emptyVNode, loader, onError, onSuccess);\n","import { v4 as uuidv4 } from \"uuid\";\n\n/**\n * Stores the last executionKey for all taskKeys. This is used for deduplication of requests. There is no good way of\n * cancelling a dispatched request, but we can at least avoid processing the responses for requests we wanted to cancel.\n */\nconst repository: Record<string, string> = {};\n\n/**\n * only executes the mutator function if the current execution is the last execution\n *\n * @param taskKey key of the task\n * @param executionKey kay of the execution\n */\nconst updateState = (taskKey: string, executionKey: string) => (\n  mutation: Function\n) => () => {\n  if (repository[taskKey] === executionKey) {\n    mutation();\n    delete repository[taskKey];\n  }\n};\n\n/**\n * Sets an executionKey for a given taskKey\n * @param taskKey\n * @param executionKey\n * @returns an `updateState` function\n */\nexport const start = () => {\n  /**\n   * Generate keys\n   */\n  const taskKey = uuidv4();\n  const executionKey = uuidv4();\n\n  /**\n   * Store execution key for task\n   */\n  repository[taskKey] = executionKey;\n\n  /**\n   * Return updateState function\n   */\n  return updateState(taskKey, executionKey);\n};\n","import { TaskEither, fold } from \"fp-ts/lib/TaskEither\";\nimport { task } from \"fp-ts/lib/Task\";\nimport { pipe } from \"fp-ts/lib/pipeable\";\nimport { ApiError } from \"@/services/breweryDB\";\nimport { ref, UnwrapRef } from \"vue\";\nimport { ApiTask } from \"./apiTask\";\nimport { ApiTaskState } from \"./ApiTaskState\";\nimport { start } from \"./apiTaskRepository\";\nimport { Lazy } from \"fp-ts/lib/function\";\n\ntype LazyTaskEither<T> = Lazy<TaskEither<ApiError, T>>;\n\n/**\n * Turns a `TaskEither` into an `execute` function and a `TaskState` object.\n *\n * @param taskEither the taskEither to handle\n * @param taskKey task key to use for request de-duplication\n */\nexport function useApiTask<T>(lazyTaskEither: LazyTaskEither<T>): ApiTask<T> {\n  /**\n   * Set initial state\n   */\n  const taskState = ref<ApiTaskState<T>>({ pending: false });\n\n  /**\n   * Execute the lazyTaskEither and keeps track of the task state.\n   */\n  const executeTask = () => {\n    /**\n     * Create a new task in the ApiTaskRepository.\n     *\n     * The returned updateState function can be used to update the taskState if the current execution is the last\n     * execution.\n     */\n    const updateState = start();\n\n    /**\n     * Mark state as pending\n     */\n    taskState.value = { pending: true };\n\n    /**\n     * Handle the error state\n     * @param error the error to handle\n     */\n    const onLeft = (error: ApiError) =>\n      task.fromIO(\n        updateState(() => (taskState.value = { pending: false, error }))\n      );\n\n    /**\n     * Handle the success state\n     * @param result the result to handle\n     */\n    const onRight = (result: T) =>\n      task.fromIO(\n        updateState(\n          () =>\n            (taskState.value = {\n              pending: false,\n              result: result as UnwrapRef<T>\n            })\n        )\n      );\n\n    /**\n     * execute the lazyTaskEither and fold its results\n     */\n    pipe(lazyTaskEither(), fold(onLeft, onRight))();\n  };\n\n  /**\n   * Return the ApiTask with the `executeTask` function and the `taskState`.\n   */\n  return { executeTask, taskState };\n}\n","import { h, defineComponent, watch } from \"vue\";\nimport { getList } from \"@/services/breweryDB/resources/brewery\";\nimport * as qs from \"@/ui/queryState\";\nimport * as ts from \"@/ui/folds/taskState\";\nimport { useApiTask } from \"../concerns\";\nimport {\n  Filter,\n  Title,\n  ErrorMessage,\n  Pagination,\n  Box,\n  BreweryTable\n} from \"@/ui/components\";\nimport { BreweryList } from \"@/entities\";\nimport { useI18n } from \"vue-i18n\";\n\nconst DEFAULT_PAGE = 1;\n\nexport const IndexView = defineComponent({\n  setup() {\n    const { t } = useI18n();\n\n    /**\n     * Create page-level state variables stored in the query string\n     */\n    const page = qs.number(\"page\", DEFAULT_PAGE);\n    const city = qs.string(\"city\");\n    const name = qs.string(\"name\");\n\n    /**\n     * Create an ApiTask that fetches the list of breweries based on the current state of the filters and pagination.\n     * Since we need this data right away, it executes the task immediately as well.\n     */\n    const { executeTask, taskState } = useApiTask(() =>\n      getList({\n        city: city.value,\n        name: name.value,\n        page: page.value\n      })\n    );\n    executeTask();\n\n    /**\n     * Execute the data fetch ApiTask on any filter/pagination state change. Since these are computed variables based on\n     * the reactive route.currentRoute variable, any url change will trigger the execution.\n     */\n    watch([page, city, name], executeTask);\n\n    /**\n     * Executes a filter change mutation and whatever common action all filter changes should do as well. In this case,\n     * it resets the pagination, so a new filtered state always starts on page 1.\n     * @param mutation the mutation to execute\n     */\n    const updateFilter = (mutation: Function) => {\n      mutation();\n      page.value = DEFAULT_PAGE;\n    };\n\n    /**\n     * Renders the view\n     */\n    return () => [\n      /**\n       * Page title\n       */\n      h(Title, () => t(\"Breweries\")),\n\n      /**\n       * Filtering form\n       */\n      h(\"form\", { class: \"py-4 sm:flex\" }, [\n        h(Filter, {\n          label: t(\"Name\"),\n          value: name.value,\n          onInput: (value: string) => updateFilter(() => (name.value = value))\n        }),\n        h(Filter, {\n          label: t(\"City\"),\n          value: city.value,\n          onInput: (value: string) => updateFilter(() => (city.value = value))\n        })\n      ]),\n\n      /**\n       * Results table and pagination\n       * The `ts.toVNodesPending` folds any taskState into renderable VNodes.\n       */\n      ts.toVNodesPending(\n        error => h(ErrorMessage, { error, onRetry: executeTask }),\n        (list: BreweryList) => h(Box, () => h(BreweryTable, { list }))\n      )(taskState.value),\n      h(Pagination, { page: page.value })\n    ];\n  }\n});\n","import { h, defineComponent, watch } from \"vue\";\nimport { get } from \"@/services/breweryDB/resources/brewery\";\nimport { useApiTask } from \"../concerns\";\nimport {\n  Box,\n  Title,\n  ErrorMessage,\n  Tag,\n  Map,\n  FeaturedBreweries\n} from \"../components\";\nimport * as option from \"@/ui/folds/option\";\nimport * as ts from \"@/ui/folds/taskState\";\nimport { Brewery, GeographicLocation } from \"@/entities\";\nimport { useI18n } from \"vue-i18n\";\n\nexport const DetailView = defineComponent({\n  props: {\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const { t, d } = useI18n();\n\n    /**\n     * Create ApiTask that fetches a gives brewery's data based on its ID.\n     * Since we need this data right away, it executes the task immediately as well.\n     */\n    const { executeTask, taskState } = useApiTask(() => get(props.id));\n    executeTask();\n\n    /**\n     * Execute the data fetch ApiTask on any props change. This way, any ID change in the url (for example a going back\n     * from one brewery's page to another using the back button, or clicking on a featured brewery link) will trigger\n     * the fetch ApiTask again.\n     */\n    watch(props, () => console.log(JSON.stringify(props)));\n    watch(props, executeTask);\n\n    /**\n     * Renders the view\n     */\n    return () => [\n      /**\n       * Brewery data box\n       * The `ts.toVNodesPending` folds any taskState into renderable VNodes.\n       */\n      ts.toVNodesPending(\n        error => h(ErrorMessage, { error, onRetry: executeTask }),\n        (result: Brewery) =>\n          h(Box, { class: \"flex\" }, () => [\n            h(\"div\", { class: \"flex-1\" }, [\n              /**\n               * Brewery title and type\n               */\n              h(Title, () => [result.name, h(Tag, () => result.type)]),\n\n              /**\n               * Address\n               */\n              option.toParagraph(result.address.street),\n              option.toParagraph(result.address.city),\n              option.toParagraph(result.address.state),\n              option.toParagraph(result.address.country),\n\n              /**\n               * Contact details\n               */\n              option.toVNodes((value: string) =>\n                h(\"p\", t(\"Phone: {value}\", { value }))\n              )(result.phone),\n              option.toLink(result.website),\n\n              /**\n               * Last updated date converted into the client's timezone and localized to the client's locale.\n               */\n              h(\n                \"p\",\n                { class: \"text-xs italic text-gray-500 pt-6\" },\n                t(\"Last updated on {date}.\", { date: d(result.updatedAt) })\n              )\n            ]),\n\n            /**\n             * Location map\n             */\n            option.toVNodes((coordinates: GeographicLocation) =>\n              h(Map, { coordinates })\n            )(result.coordinates)\n          ])\n      )(taskState.value),\n\n      /**\n       * Featured breweries llist\n       */\n      h(FeaturedBreweries, {\n        breweries: [\n          { name: \"Morgan Territory Brewing\", id: 832 },\n          { name: \"Mother Earth Brew Co LLC\", id: 833 },\n          { name: \"Non-existing Brewery (this will be 404)\", id: 0 }\n        ]\n      })\n    ];\n  }\n});\n","import { h, defineComponent } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport { Box, Title } from \"../components\";\n\nexport const AboutView = defineComponent({\n  setup() {\n    const { t } = useI18n();\n    return () =>\n      h(Box, () => [\n        h(Title, () => t(\"About this app\")),\n        h(\n          \"p\",\n          t(\n            \"This application was created to demonstrate some SPA architecture best practices.\"\n          )\n        ),\n        h(\"p\", t(\"You can read about them on the GitHub project page:\")),\n        h(\n          \"a\",\n          { href: \"https://github.com/interferenc/breweries\" },\n          \"https://github.com/interferenc/breweries\"\n        )\n      ]);\n  }\n});\n","import { h, defineComponent } from \"vue\";\nimport { RouterView } from \"vue-router\";\nimport { Container } from \"../components\";\n\nexport const EmptyLayout = defineComponent({\n  setup: () => () => h(Container, () => h(RouterView))\n});\n","import { h, defineComponent } from \"vue\";\nimport { RouterView } from \"vue-router\";\nimport { Navbar } from \"@/ui/components/Navbar\";\nimport { Container } from \"../components\";\n\nexport const NavbarLayout = defineComponent({\n  setup: () => () =>\n    h(\"div\", { class: \"pt-16 p-6\" }, [\n      h(Navbar),\n      h(Container, () => h(RouterView))\n    ])\n});\n","import { RouteRecordRaw, RouteLocationNormalized } from \"vue-router\";\nimport { HomeView, IndexView, DetailView, AboutView } from \"@/ui/views\";\nimport { EmptyLayout, NavbarLayout } from \"@/ui/layouts\";\n\nimport { RouteName } from \"./types\";\nimport { numberDecoder } from \"./query\";\n\n/**\n * Extract the numeric ID from the route params and decodes it\n * @param route the route to use for extraction\n */\nconst idFromRoute = (route: RouteLocationNormalized) => ({\n  id: numberDecoder(route.params.id as string)\n});\n\n/**\n * The application routes.\n *\n * The top level routers are used to set the used layout. Actual views are always children of a top level layout route.\n */\nexport const routes: RouteRecordRaw[] = [\n  {\n    path: \"/\",\n    component: EmptyLayout,\n    children: [\n      {\n        path: \"\",\n        name: RouteName.Home,\n        component: HomeView\n      }\n    ]\n  },\n  {\n    path: \"/\",\n    component: NavbarLayout,\n    children: [\n      {\n        path: \"breweries\",\n        name: RouteName.Index,\n        component: IndexView\n      },\n      {\n        path: \"breweries/:id\",\n        name: RouteName.Detail,\n        component: DetailView,\n        props: idFromRoute\n      },\n      {\n        path: \"about\",\n        name: RouteName.About,\n        component: AboutView\n      }\n    ]\n  }\n];\n","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport { routes } from \"./routes\";\n\n/**\n * Creates the router using the routes\n */\nexport const router = createRouter({\n  /**\n   * This app is deployed on GitHub pages, so no way to use proper URLs.\n   */\n  history: createWebHashHistory(process.env.BASE_URL),\n  routes\n});\n","import { createI18n } from \"vue-i18n\";\n\nexport const i18n = createI18n({\n  locale: \"en\",\n  missingWarn: false,\n  fallbackFormat: true,\n  messages: {\n    en: {},\n    de: {}\n  }\n});\n","import { createApp } from \"vue\";\nimport { router } from \"./ui/router\";\nimport { i18n } from \"./ui/i18n\";\nimport { initialize as initializeQueryRepository } from \"./ui/queryState\";\nimport { RouterView as App } from \"vue-router\";\nimport \"@/ui/assets/style.css\";\n\n/**\n * Initializes the query repository for the queryState\n */\nrouter.isReady().then(initializeQueryRepository);\n\n/**\n * Create main application instance\n */\ncreateApp(App)\n  .use(router)\n  .use(i18n)\n  .mount(\"#app\");\n"],"sourceRoot":""}